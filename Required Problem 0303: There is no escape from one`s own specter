#include <stdio.h>
#include <string.h>

#define MAX_MSG 300
#define KEY_LEN 8

typedef struct {
    char keyword[KEY_LEN];
    char message[MAX_MSG];
} EasterEgg;

const EasterEgg arthurEgg = {
    "specter",
    "I confess. After graduating, I was blinded by startup arrogance and "
    "blocked friends' paths. I learned that when only I believe an idea, "
    "it leads to disaster. Past Arthur was a ghost of stubbornness."
};

void charToBinary(char c, char bin[9]) {
    for (int i = 7; i >= 0; i--)
        bin[7-i] = ((c >> i) & 1) + '0';
    bin[8] = '\0';
}

int validateInput(const char bins[7][9], const char* input) {
    for (int i = 0; i < 7; i++) {
        char expected = 0;
        for (int j = 0; j < 8; j++)
            expected = (expected << 1) | (bins[i][j] - '0');
        if (input[i] != expected) return 0;
    }
    return 1;
}

void findEasterEgg() {
    char bins[7][9], input[8], final[KEY_LEN];
    
    printf("<<Arthur's Easter Egg>>\nBinary codes (reversed):\n");
    for (int i = 0; i < 7; i++) {
        charToBinary(arthurEgg.keyword[i], bins[i]);
        printf("%s ", bins[6-i]);
    }
    
    printf("\nEnter characters: ");
    scanf("%7s", input);
    if (!validateInput(bins, input)) {
        printf("Incorrect input.\n");
        return;
    }
    
    printf("Combine into word: ");
    scanf("%7s", final);
    if (strcmp(final, arthurEgg.keyword) == 0) {
        printf("##Easter Egg!$$\n%s\n", arthurEgg.message);
    } else {
        printf("Wrong word.\n");
    }
}

void selfManagementMenu() {
    char name[32];
    printf("2. Self-Management\nName: ");
    scanf("%31s", name);
    if (strcmp(name, "Arthur") == 0) findEasterEgg();
    else printf("Welcome, %s\n", name);
}

void trainingMenu() {
    while (1) {
        printf("\n[Training Menu]\n1. Communication\n2. Self-Management\n3. Exit\nChoice: ");
        int choice;
        if (scanf("%d", &choice) != 1) {
            while (getchar() != '\n');
            printf("Invalid input.\n");
            continue;
        }
        
        switch (choice) {
            case 1: printf("Communication training coming soon.\n"); break;
            case 2: selfManagementMenu(); break;
            case 3: return;
            default: printf("Invalid option.\n");
        }
    }
}

int main() {
    trainingMenu();
    return 0;
}
